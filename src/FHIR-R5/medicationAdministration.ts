/**
 * FHIR Version R5
 * The following is auto generated resource definition.
 *
 * OpenAPI spec version: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Annotation } from './annotation';
import { Code } from './code';
import { CodeableConcept } from './codeableConcept';
import { CodeableReference } from './codeableReference';
import { DateTime } from './dateTime';
import { Extension } from './extension';
import { Id } from './id';
import { Identifier } from './identifier';
import { MedicationAdministrationDosage } from './medicationAdministrationDosage';
import { MedicationAdministrationPerformer } from './medicationAdministrationPerformer';
import { Meta } from './meta';
import { Narrative } from './narrative';
import { Period } from './period';
import { Reference } from './reference';
import { ResourceList } from './resourceList';
import { Timing } from './timing';
import { Uri } from './uri';

/**
 * Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner.
 */
export interface MedicationAdministration { 
    /**
     * This is a MedicationAdministration resource
     */
    resourceType: 'MedicationAdministration';
    id?: Id;
    meta?: Meta;
    implicitRules?: Uri;
    language?: Code;
    text?: Narrative;
    /**
     * These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
     */
    contained?: Array<ResourceList>;
    /**
     * May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
     */
    extension?: Array<Extension>;
    /**
     * May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
     */
    modifierExtension?: Array<Extension>;
    /**
     * Identifiers associated with this Medication Administration that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server.
     */
    identifier?: Array<Identifier>;
    /**
     * A plan that is fulfilled in whole or in part by this MedicationAdministration.
     */
    basedOn?: Array<Reference>;
    /**
     * A larger event of which this particular event is a component or step.
     */
    partOf?: Array<Reference>;
    status?: Code;
    /**
     * A code indicating why the administration was not performed.
     */
    statusReason?: Array<CodeableConcept>;
    /**
     * The type of medication administration (for example, drug classification like ATC, where meds would be administered, legal category of the medication).
     */
    category?: Array<CodeableConcept>;
    medication: CodeableReference;
    subject: Reference;
    encounter?: Reference;
    /**
     * Additional information (for example, patient height and weight) that supports the administration of the medication.  This attribute can be used to provide documentation of specific characteristics of the patient present at the time of administration.  For example, if the dose says \"give \"x\" if the heartrate exceeds \"y\"\", then the heart rate can be included using this attribute.
     */
    supportingInformation?: Array<Reference>;
    /**
     * A specific date/time or interval of time during which the administration took place (or did not take place). For many administrations, such as swallowing a tablet the use of dateTime is more appropriate.
     */
    occurenceDateTime?: string;
    occurencePeriod?: Period;
    occurenceTiming?: Timing;
    recorded?: Date;
    isSubPotent?: boolean;
    /**
     * The reason or reasons why the full dose was not administered.
     */
    subPotentReason?: Array<CodeableConcept>;
    /**
     * The performer of the medication treatment.  For devices this is the device that performed the administration of the medication.  An IV Pump would be an example of a device that is performing the administration. Both the IV Pump and the practitioner that set the rate or bolus on the pump can be listed as performers.
     */
    performer?: Array<MedicationAdministrationPerformer>;
    /**
     * A code, Condition or observation that supports why the medication was administered.
     */
    reason?: Array<CodeableReference>;
    request?: Reference;
    /**
     * The device that is to be used for the administration of the medication (for example, PCA Pump).
     */
    device?: Array<CodeableReference>;
    /**
     * Extra information about the medication administration that is not conveyed by the other attributes.
     */
    note?: Array<Annotation>;
    dosage?: MedicationAdministrationDosage;
    /**
     * A summary of the events of interest that have occurred, such as when the administration was verified.
     */
    eventHistory?: Array<Reference>;
}