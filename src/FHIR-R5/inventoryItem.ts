/**
 * FHIR Version R5
 * The following is auto generated resource definition.
 *
 * OpenAPI spec version: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Code } from './code';
import { CodeableConcept } from './codeableConcept';
import { Extension } from './extension';
import { Id } from './id';
import { Identifier } from './identifier';
import { InventoryItemAssociation } from './inventoryItemAssociation';
import { InventoryItemCharacteristic } from './inventoryItemCharacteristic';
import { InventoryItemDescription } from './inventoryItemDescription';
import { InventoryItemInstance } from './inventoryItemInstance';
import { InventoryItemName } from './inventoryItemName';
import { InventoryItemResponsibleOrganization } from './inventoryItemResponsibleOrganization';
import { Meta } from './meta';
import { Narrative } from './narrative';
import { Quantity } from './quantity';
import { Reference } from './reference';
import { ResourceList } from './resourceList';
import { Uri } from './uri';

/**
 * A functional description of an inventory item used in inventory and supply-related workflows.
 */
export interface InventoryItem { 
    /**
     * This is a InventoryItem resource
     */
    resourceType: 'InventoryItem';
    id?: Id;
    meta?: Meta;
    implicitRules?: Uri;
    language?: Code;
    text?: Narrative;
    /**
     * These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
     */
    contained?: Array<ResourceList>;
    /**
     * May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
     */
    extension?: Array<Extension>;
    /**
     * May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
     */
    modifierExtension?: Array<Extension>;
    /**
     * Business identifier for the inventory item.
     */
    identifier?: Array<Identifier>;
    status?: Code;
    /**
     * Category or class of the item.
     */
    category?: Array<CodeableConcept>;
    /**
     * Code designating the specific type of item.
     */
    code?: Array<CodeableConcept>;
    /**
     * The item name(s) - the brand name, or common name, functional name, generic name.
     */
    name?: Array<InventoryItemName>;
    /**
     * Organization(s) responsible for the product.
     */
    responsibleOrganization?: Array<InventoryItemResponsibleOrganization>;
    description?: InventoryItemDescription;
    /**
     * The usage status e.g. recalled, in use, discarded... This can be used to indicate that the items have been taken out of inventory, or are in use, etc.
     */
    inventoryStatus?: Array<CodeableConcept>;
    baseUnit?: CodeableConcept;
    netContent?: Quantity;
    /**
     * Association with other items or products.
     */
    association?: Array<InventoryItemAssociation>;
    /**
     * The descriptive or identifying characteristics of the item.
     */
    characteristic?: Array<InventoryItemCharacteristic>;
    instance?: InventoryItemInstance;
    productReference?: Reference;
}