/**
 * FHIR Version R5
 * The following is auto generated resource definition.
 *
 * OpenAPI spec version: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Annotation } from './annotation';
import { Code } from './code';
import { CodeableConcept } from './codeableConcept';
import { Extension } from './extension';
import { Id } from './id';
import { Identifier } from './identifier';
import { Markdown } from './markdown';
import { Meta } from './meta';
import { Narrative } from './narrative';
import { Reference } from './reference';
import { ResourceList } from './resourceList';
import { SubstanceDefinitionCharacterization } from './substanceDefinitionCharacterization';
import { SubstanceDefinitionCode } from './substanceDefinitionCode';
import { SubstanceDefinitionMoiety } from './substanceDefinitionMoiety';
import { SubstanceDefinitionMolecularWeight } from './substanceDefinitionMolecularWeight';
import { SubstanceDefinitionName } from './substanceDefinitionName';
import { SubstanceDefinitionProperty } from './substanceDefinitionProperty';
import { SubstanceDefinitionRelationship } from './substanceDefinitionRelationship';
import { SubstanceDefinitionSourceMaterial } from './substanceDefinitionSourceMaterial';
import { SubstanceDefinitionStructure } from './substanceDefinitionStructure';
import { Uri } from './uri';

/**
 * The detailed description of a substance, typically at a level beyond what is used for prescribing.
 */
export interface SubstanceDefinition { 
    /**
     * This is a SubstanceDefinition resource
     */
    resourceType: 'SubstanceDefinition';
    id?: Id;
    meta?: Meta;
    implicitRules?: Uri;
    language?: Code;
    text?: Narrative;
    /**
     * These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
     */
    contained?: Array<ResourceList>;
    /**
     * May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
     */
    extension?: Array<Extension>;
    /**
     * May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
     */
    modifierExtension?: Array<Extension>;
    /**
     * Identifier by which this substance is known.
     */
    identifier?: Array<Identifier>;
    version?: string;
    status?: CodeableConcept;
    /**
     * A high level categorization, e.g. polymer or nucleic acid, or food, chemical, biological, or a lower level such as the general types of polymer (linear or branch chain) or type of impurity (process related or contaminant).
     */
    classification?: Array<CodeableConcept>;
    domain?: CodeableConcept;
    /**
     * The quality standard, established benchmark, to which substance complies (e.g. USP/NF, Ph. Eur, JP, BP, Company Standard).
     */
    grade?: Array<CodeableConcept>;
    description?: Markdown;
    /**
     * Supporting literature.
     */
    informationSource?: Array<Reference>;
    /**
     * Textual comment about the substance's catalogue or registry record.
     */
    note?: Array<Annotation>;
    /**
     * The entity that creates, makes, produces or fabricates the substance. This is a set of potential manufacturers but is not necessarily comprehensive.
     */
    manufacturer?: Array<Reference>;
    /**
     * An entity that is the source for the substance. It may be different from the manufacturer. Supplier is synonymous to a distributor.
     */
    supplier?: Array<Reference>;
    /**
     * Moiety, for structural modifications.
     */
    moiety?: Array<SubstanceDefinitionMoiety>;
    /**
     * General specifications for this substance.
     */
    characterization?: Array<SubstanceDefinitionCharacterization>;
    /**
     * General specifications for this substance.
     */
    property?: Array<SubstanceDefinitionProperty>;
    referenceInformation?: Reference;
    /**
     * The average mass of a molecule of a compound compared to 1/12 the mass of carbon 12 and calculated as the sum of the atomic weights of the constituent atoms.
     */
    molecularWeight?: Array<SubstanceDefinitionMolecularWeight>;
    structure?: SubstanceDefinitionStructure;
    /**
     * Codes associated with the substance.
     */
    code?: Array<SubstanceDefinitionCode>;
    /**
     * Names applicable to this substance.
     */
    name?: Array<SubstanceDefinitionName>;
    /**
     * A link between this substance and another, with details of the relationship.
     */
    relationship?: Array<SubstanceDefinitionRelationship>;
    nucleicAcid?: Reference;
    polymer?: Reference;
    protein?: Reference;
    sourceMaterial?: SubstanceDefinitionSourceMaterial;
}