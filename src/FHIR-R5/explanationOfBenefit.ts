/**
 * FHIR Version R5
 * The following is auto generated resource definition.
 *
 * OpenAPI spec version: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Attachment } from './attachment';
import { Code } from './code';
import { CodeableConcept } from './codeableConcept';
import { DateTime } from './dateTime';
import { ExplanationOfBenefitAccident } from './explanationOfBenefitAccident';
import { ExplanationOfBenefitAddItem } from './explanationOfBenefitAddItem';
import { ExplanationOfBenefitAdjudication } from './explanationOfBenefitAdjudication';
import { ExplanationOfBenefitBenefitBalance } from './explanationOfBenefitBenefitBalance';
import { ExplanationOfBenefitCareTeam } from './explanationOfBenefitCareTeam';
import { ExplanationOfBenefitDiagnosis } from './explanationOfBenefitDiagnosis';
import { ExplanationOfBenefitEvent } from './explanationOfBenefitEvent';
import { ExplanationOfBenefitInsurance } from './explanationOfBenefitInsurance';
import { ExplanationOfBenefitItem } from './explanationOfBenefitItem';
import { ExplanationOfBenefitPayee } from './explanationOfBenefitPayee';
import { ExplanationOfBenefitPayment } from './explanationOfBenefitPayment';
import { ExplanationOfBenefitProcedure } from './explanationOfBenefitProcedure';
import { ExplanationOfBenefitProcessNote } from './explanationOfBenefitProcessNote';
import { ExplanationOfBenefitRelated } from './explanationOfBenefitRelated';
import { ExplanationOfBenefitSupportingInfo } from './explanationOfBenefitSupportingInfo';
import { ExplanationOfBenefitTotal } from './explanationOfBenefitTotal';
import { Extension } from './extension';
import { Id } from './id';
import { Identifier } from './identifier';
import { Meta } from './meta';
import { Money } from './money';
import { Narrative } from './narrative';
import { Period } from './period';
import { PositiveInt } from './positiveInt';
import { Reference } from './reference';
import { ResourceList } from './resourceList';
import { Uri } from './uri';

/**
 * This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
 */
export interface ExplanationOfBenefit { 
    /**
     * This is a ExplanationOfBenefit resource
     */
    resourceType: 'ExplanationOfBenefit';
    id?: Id;
    meta?: Meta;
    implicitRules?: Uri;
    language?: Code;
    text?: Narrative;
    /**
     * These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
     */
    contained?: Array<ResourceList>;
    /**
     * May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
     */
    extension?: Array<Extension>;
    /**
     * May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
     */
    modifierExtension?: Array<Extension>;
    /**
     * A unique identifier assigned to this explanation of benefit.
     */
    identifier?: Array<Identifier>;
    /**
     * Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.
     */
    traceNumber?: Array<Identifier>;
    status?: Code;
    type: CodeableConcept;
    subType?: CodeableConcept;
    use?: Code;
    patient: Reference;
    billablePeriod?: Period;
    created?: Date;
    enterer?: Reference;
    insurer?: Reference;
    provider?: Reference;
    priority?: CodeableConcept;
    fundsReserveRequested?: CodeableConcept;
    fundsReserve?: CodeableConcept;
    /**
     * Other claims which are related to this claim such as prior submissions or claims for related services or for the same event.
     */
    related?: Array<ExplanationOfBenefitRelated>;
    prescription?: Reference;
    originalPrescription?: Reference;
    /**
     * Information code for an event with a corresponding date or period.
     */
    event?: Array<ExplanationOfBenefitEvent>;
    payee?: ExplanationOfBenefitPayee;
    referral?: Reference;
    /**
     * Healthcare encounters related to this claim.
     */
    encounter?: Array<Reference>;
    facility?: Reference;
    claim?: Reference;
    claimResponse?: Reference;
    outcome?: Code;
    decision?: CodeableConcept;
    disposition?: string;
    /**
     * Reference from the Insurer which is used in later communications which refers to this adjudication.
     */
    preAuthRef?: Array<string>;
    /**
     * The timeframe during which the supplied preauthorization reference may be quoted on claims to obtain the adjudication as provided.
     */
    preAuthRefPeriod?: Array<Period>;
    diagnosisRelatedGroup?: CodeableConcept;
    /**
     * The members of the team who provided the products and services.
     */
    careTeam?: Array<ExplanationOfBenefitCareTeam>;
    /**
     * Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues.
     */
    supportingInfo?: Array<ExplanationOfBenefitSupportingInfo>;
    /**
     * Information about diagnoses relevant to the claim items.
     */
    diagnosis?: Array<ExplanationOfBenefitDiagnosis>;
    /**
     * Procedures performed on the patient relevant to the billing items with the claim.
     */
    procedure?: Array<ExplanationOfBenefitProcedure>;
    precedence?: PositiveInt;
    /**
     * Financial instruments for reimbursement for the health care products and services specified on the claim.
     */
    insurance?: Array<ExplanationOfBenefitInsurance>;
    accident?: ExplanationOfBenefitAccident;
    patientPaid?: Money;
    /**
     * A claim line. Either a simple (a product or service) or a 'group' of details which can also be a simple items or groups of sub-details.
     */
    item?: Array<ExplanationOfBenefitItem>;
    /**
     * The first-tier service adjudications for payor added product or service lines.
     */
    addItem?: Array<ExplanationOfBenefitAddItem>;
    /**
     * The adjudication results which are presented at the header level rather than at the line-item or add-item levels.
     */
    adjudication?: Array<ExplanationOfBenefitAdjudication>;
    /**
     * Categorized monetary totals for the adjudication.
     */
    total?: Array<ExplanationOfBenefitTotal>;
    payment?: ExplanationOfBenefitPayment;
    formCode?: CodeableConcept;
    form?: Attachment;
    /**
     * A note that describes or explains adjudication results in a human readable form.
     */
    processNote?: Array<ExplanationOfBenefitProcessNote>;
    benefitPeriod?: Period;
    /**
     * Balance by Benefit Category.
     */
    benefitBalance?: Array<ExplanationOfBenefitBenefitBalance>;
}