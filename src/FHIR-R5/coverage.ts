/**
 * FHIR Version R5
 * The following is auto generated resource definition.
 *
 * OpenAPI spec version: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Code } from './code';
import { CodeableConcept } from './codeableConcept';
import { CoverageClass } from './coverageClass';
import { CoverageCostToBeneficiary } from './coverageCostToBeneficiary';
import { CoveragePaymentBy } from './coveragePaymentBy';
import { Extension } from './extension';
import { Id } from './id';
import { Identifier } from './identifier';
import { Meta } from './meta';
import { Narrative } from './narrative';
import { Period } from './period';
import { PositiveInt } from './positiveInt';
import { Reference } from './reference';
import { ResourceList } from './resourceList';
import { Uri } from './uri';

/**
 * Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.
 */
export interface Coverage { 
    /**
     * This is a Coverage resource
     */
    resourceType: 'Coverage';
    id?: Id;
    meta?: Meta;
    implicitRules?: Uri;
    language?: Code;
    text?: Narrative;
    /**
     * These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
     */
    contained?: Array<ResourceList>;
    /**
     * May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
     */
    extension?: Array<Extension>;
    /**
     * May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
     */
    modifierExtension?: Array<Extension>;
    /**
     * The identifier of the coverage as issued by the insurer.
     */
    identifier?: Array<Identifier>;
    status?: Code;
    kind?: Code;
    /**
     * Link to the paying party and optionally what specifically they will be responsible to pay.
     */
    paymentBy?: Array<CoveragePaymentBy>;
    type?: CodeableConcept;
    policyHolder?: Reference;
    subscriber?: Reference;
    /**
     * The insurer assigned ID for the Subscriber.
     */
    subscriberId?: Array<Identifier>;
    beneficiary: Reference;
    dependent?: string;
    relationship?: CodeableConcept;
    period?: Period;
    insurer?: Reference;
    /**
     * A suite of underwriter specific classifiers.
     */
    _class?: Array<CoverageClass>;
    order?: PositiveInt;
    network?: string;
    /**
     * A suite of codes indicating the cost category and associated amount which have been detailed in the policy and may have been  included on the health card.
     */
    costToBeneficiary?: Array<CoverageCostToBeneficiary>;
    subrogation?: boolean;
    /**
     * The policy(s) which constitute this insurance coverage.
     */
    contract?: Array<Reference>;
    insurancePlan?: Reference;
}