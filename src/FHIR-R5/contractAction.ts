/**
 * FHIR Version R5
 * The following is auto generated resource definition.
 *
 * OpenAPI spec version: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Annotation } from './annotation';
import { CodeableConcept } from './codeableConcept';
import { CodeableReference } from './codeableReference';
import { ContractSubject } from './contractSubject';
import { Extension } from './extension';
import { Period } from './period';
import { Reference } from './reference';
import { Timing } from './timing';
import { UnsignedInt } from './unsignedInt';

/**
 * Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.
 */
export interface ContractAction { 
    id?: string;
    /**
     * May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
     */
    extension?: Array<Extension>;
    /**
     * May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
     */
    modifierExtension?: Array<Extension>;
    doNotPerform?: boolean;
    type: CodeableConcept;
    /**
     * Entity of the action.
     */
    subject?: Array<ContractSubject>;
    intent: CodeableConcept;
    /**
     * Id [identifier??] of the clause or question text related to this action in the referenced form or QuestionnaireResponse.
     */
    linkId?: Array<string>;
    status: CodeableConcept;
    context?: Reference;
    /**
     * Id [identifier??] of the clause or question text related to the requester of this action in the referenced form or QuestionnaireResponse.
     */
    contextLinkId?: Array<string>;
    /**
     * When action happens.
     */
    occurrenceDateTime?: string;
    occurrencePeriod?: Period;
    occurrenceTiming?: Timing;
    /**
     * Who or what initiated the action and has responsibility for its activation.
     */
    requester?: Array<Reference>;
    /**
     * Id [identifier??] of the clause or question text related to the requester of this action in the referenced form or QuestionnaireResponse.
     */
    requesterLinkId?: Array<string>;
    /**
     * The type of individual that is desired or required to perform or not perform the action.
     */
    performerType?: Array<CodeableConcept>;
    performerRole?: CodeableConcept;
    performer?: Reference;
    /**
     * Id [identifier??] of the clause or question text related to the reason type or reference of this  action in the referenced form or QuestionnaireResponse.
     */
    performerLinkId?: Array<string>;
    /**
     * Rationale for the action to be performed or not performed. Describes why the action is permitted or prohibited. Either a coded concept, or another resource whose existence justifies permitting or not permitting this action.
     */
    reason?: Array<CodeableReference>;
    /**
     * Id [identifier??] of the clause or question text related to the reason type or reference of this  action in the referenced form or QuestionnaireResponse.
     */
    reasonLinkId?: Array<string>;
    /**
     * Comments made about the term action made by the requester, performer, subject or other participants.
     */
    note?: Array<Annotation>;
    /**
     * Security labels that protects the action.
     */
    securityLabelNumber?: Array<UnsignedInt>;
}