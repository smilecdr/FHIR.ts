/**
 * FHIR Version R5
 * The following is auto generated resource definition.
 *
 * OpenAPI spec version: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Attachment } from './attachment';
import { Code } from './code';
import { CodeableConcept } from './codeableConcept';
import { ContractContentDefinition } from './contractContentDefinition';
import { ContractFriendly } from './contractFriendly';
import { ContractLegal } from './contractLegal';
import { ContractRule } from './contractRule';
import { ContractSigner } from './contractSigner';
import { ContractTerm } from './contractTerm';
import { DateTime } from './dateTime';
import { Extension } from './extension';
import { Id } from './id';
import { Identifier } from './identifier';
import { Meta } from './meta';
import { Narrative } from './narrative';
import { Period } from './period';
import { Reference } from './reference';
import { ResourceList } from './resourceList';
import { Uri } from './uri';

/**
 * Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.
 */
export interface Contract { 
    /**
     * This is a Contract resource
     */
    resourceType: 'Contract';
    id?: Id;
    meta?: Meta;
    implicitRules?: Uri;
    language?: Code;
    text?: Narrative;
    /**
     * These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
     */
    contained?: Array<ResourceList>;
    /**
     * May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
     */
    extension?: Array<Extension>;
    /**
     * May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
     */
    modifierExtension?: Array<Extension>;
    /**
     * Unique identifier for this Contract or a derivative that references a Source Contract.
     */
    identifier?: Array<Identifier>;
    url?: Uri;
    version?: string;
    status?: Code;
    legalState?: CodeableConcept;
    instantiatesCanonical?: Reference;
    instantiatesUri?: Uri;
    contentDerivative?: CodeableConcept;
    issued?: Date;
    applies?: Period;
    expirationType?: CodeableConcept;
    /**
     * The target entity impacted by or of interest to parties to the agreement.
     */
    subject?: Array<Reference>;
    /**
     * A formally or informally recognized grouping of people, principals, organizations, or jurisdictions formed for the purpose of achieving some form of collective action such as the promulgation, administration and enforcement of contracts and policies.
     */
    authority?: Array<Reference>;
    /**
     * Recognized governance framework or system operating with a circumscribed scope in accordance with specified principles, policies, processes or procedures for managing rights, actions, or behaviors of parties or principals relative to resources.
     */
    domain?: Array<Reference>;
    /**
     * Sites in which the contract is complied with,  exercised, or in force.
     */
    site?: Array<Reference>;
    name?: string;
    title?: string;
    subtitle?: string;
    /**
     * Alternative representation of the title for this Contract definition, derivative, or instance in any legal state., e.g., a domain specific contract number related to legislation.
     */
    alias?: Array<string>;
    author?: Reference;
    scope?: CodeableConcept;
    topicCodeableConcept?: CodeableConcept;
    topicReference?: Reference;
    type?: CodeableConcept;
    /**
     * Sub-category for the Contract that distinguishes the kinds of systems that would be interested in the Contract within the context of the Contract's scope.
     */
    subType?: Array<CodeableConcept>;
    contentDefinition?: ContractContentDefinition;
    /**
     * One or more Contract Provisions, which may be related and conveyed as a group, and may contain nested groups.
     */
    term?: Array<ContractTerm>;
    /**
     * Information that may be needed by/relevant to the performer in their execution of this term action.
     */
    supportingInfo?: Array<Reference>;
    /**
     * Links to Provenance records for past versions of this Contract definition, derivative, or instance, which identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the Contract.  The Provenance.entity indicates the target that was changed in the update (see [Provenance.entity](provenance-definitions.html#Provenance.entity)).
     */
    relevantHistory?: Array<Reference>;
    /**
     * Parties with legal standing in the Contract, including the principal parties, the grantor(s) and grantee(s), which are any person or organization bound by the contract, and any ancillary parties, which facilitate the execution of the contract such as a notary or witness.
     */
    signer?: Array<ContractSigner>;
    /**
     * The \"patient friendly language\" versionof the Contract in whole or in parts. \"Patient friendly language\" means the representation of the Contract and Contract Provisions in a manner that is readily accessible and understandable by a layperson in accordance with best practices for communication styles that ensure that those agreeing to or signing the Contract understand the roles, actions, obligations, responsibilities, and implication of the agreement.
     */
    friendly?: Array<ContractFriendly>;
    /**
     * List of Legal expressions or representations of this Contract.
     */
    legal?: Array<ContractLegal>;
    /**
     * List of Computable Policy Rule Language Representations of this Contract.
     */
    rule?: Array<ContractRule>;
    legallyBindingAttachment?: Attachment;
    legallyBindingReference?: Reference;
}