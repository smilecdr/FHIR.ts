/**
 * FHIR Version R5
 * The following is auto generated resource definition.
 *
 * OpenAPI spec version: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Annotation } from './annotation';
import { Code } from './code';
import { CodeableConcept } from './codeableConcept';
import { CodeableReference } from './codeableReference';
import { Extension } from './extension';
import { Id } from './id';
import { Identifier } from './identifier';
import { ImmunizationPerformer } from './immunizationPerformer';
import { ImmunizationProgramEligibility } from './immunizationProgramEligibility';
import { ImmunizationProtocolApplied } from './immunizationProtocolApplied';
import { ImmunizationReaction } from './immunizationReaction';
import { Meta } from './meta';
import { Narrative } from './narrative';
import { Quantity } from './quantity';
import { Reference } from './reference';
import { ResourceList } from './resourceList';
import { Uri } from './uri';

/**
 * Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.
 */
export interface Immunization { 
    /**
     * This is a Immunization resource
     */
    resourceType: 'Immunization';
    id?: Id;
    meta?: Meta;
    implicitRules?: Uri;
    language?: Code;
    text?: Narrative;
    /**
     * These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
     */
    contained?: Array<ResourceList>;
    /**
     * May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
     */
    extension?: Array<Extension>;
    /**
     * May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
     */
    modifierExtension?: Array<Extension>;
    /**
     * A unique identifier assigned to this immunization record.
     */
    identifier?: Array<Identifier>;
    /**
     * A plan, order or recommendation fulfilled in whole or in part by this immunization.
     */
    basedOn?: Array<Reference>;
    status?: Code;
    statusReason?: CodeableConcept;
    vaccineCode: CodeableConcept;
    administeredProduct?: CodeableReference;
    manufacturer?: CodeableReference;
    lotNumber?: string;
    expirationDate?: string;
    patient: Reference;
    encounter?: Reference;
    /**
     * Additional information that is relevant to the immunization (e.g. for a vaccine recipient who is pregnant, the gestational age of the fetus). The reason why a vaccine was given (e.g. occupation, underlying medical condition) should be conveyed in Immunization.reason, not as supporting information. The reason why a vaccine was not given (e.g. contraindication) should be conveyed in Immunization.statusReason, not as supporting information.
     */
    supportingInformation?: Array<Reference>;
    /**
     * Date vaccine administered or was to be administered.
     */
    occurrenceDateTime?: string;
    /**
     * Date vaccine administered or was to be administered.
     */
    occurrenceString?: string;
    primarySource?: boolean;
    informationSource?: CodeableReference;
    location?: Reference;
    site?: CodeableConcept;
    route?: CodeableConcept;
    doseQuantity?: Quantity;
    /**
     * Indicates who performed the immunization event.
     */
    performer?: Array<ImmunizationPerformer>;
    /**
     * Extra information about the immunization that is not conveyed by the other attributes.
     */
    note?: Array<Annotation>;
    /**
     * Describes why the immunization occurred in coded or textual form, or Indicates another resource (Condition, Observation or DiagnosticReport) whose existence justifies this immunization.
     */
    reason?: Array<CodeableReference>;
    isSubpotent?: boolean;
    /**
     * Reason why a dose is considered to be subpotent.
     */
    subpotentReason?: Array<CodeableConcept>;
    /**
     * Indicates a patient's eligibility for a funding program.
     */
    programEligibility?: Array<ImmunizationProgramEligibility>;
    fundingSource?: CodeableConcept;
    /**
     * Categorical data indicating that an adverse event is associated in time to an immunization.
     */
    reaction?: Array<ImmunizationReaction>;
    /**
     * The protocol (set of recommendations) being followed by the provider who administered the dose.
     */
    protocolApplied?: Array<ImmunizationProtocolApplied>;
}