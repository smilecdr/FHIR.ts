/**
 * FHIR Version R5
 * The following is auto generated resource definition.
 *
 * OpenAPI spec version: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Age } from './age';
import { Annotation } from './annotation';
import { Canonical } from './canonical';
import { Code } from './code';
import { CodeableConcept } from './codeableConcept';
import { CodeableReference } from './codeableReference';
import { DateTime } from './dateTime';
import { Extension } from './extension';
import { Id } from './id';
import { Identifier } from './identifier';
import { Meta } from './meta';
import { Narrative } from './narrative';
import { Period } from './period';
import { ProcedureFocalDevice } from './procedureFocalDevice';
import { ProcedurePerformer } from './procedurePerformer';
import { Range } from './range';
import { Reference } from './reference';
import { ResourceList } from './resourceList';
import { Timing } from './timing';
import { Uri } from './uri';

/**
 * An action that is or was performed on or for a patient, practitioner, device, organization, or location. For example, this can be a physical intervention on a patient like an operation, or less invasive like long term services, counseling, or hypnotherapy.  This can be a quality or safety inspection for a location, organization, or device.  This can be an accreditation procedure on a practitioner for licensing.
 */
export interface Procedure { 
    /**
     * This is a Procedure resource
     */
    resourceType: 'Procedure';
    id?: Id;
    meta?: Meta;
    implicitRules?: Uri;
    language?: Code;
    text?: Narrative;
    /**
     * These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
     */
    contained?: Array<ResourceList>;
    /**
     * May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
     */
    extension?: Array<Extension>;
    /**
     * May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
     */
    modifierExtension?: Array<Extension>;
    /**
     * Business identifiers assigned to this procedure by the performer or other systems which remain constant as the resource is updated and is propagated from server to server.
     */
    identifier?: Array<Identifier>;
    /**
     * The URL pointing to a FHIR-defined protocol, guideline, order set or other definition that is adhered to in whole or in part by this Procedure.
     */
    instantiatesCanonical?: Array<Canonical>;
    /**
     * The URL pointing to an externally maintained protocol, guideline, order set or other definition that is adhered to in whole or in part by this Procedure.
     */
    instantiatesUri?: Array<Uri>;
    /**
     * A reference to a resource that contains details of the request for this procedure.
     */
    basedOn?: Array<Reference>;
    /**
     * A larger event of which this particular procedure is a component or step.
     */
    partOf?: Array<Reference>;
    status?: Code;
    statusReason?: CodeableConcept;
    /**
     * A code that classifies the procedure for searching, sorting and display purposes (e.g. \"Surgical Procedure\").
     */
    category?: Array<CodeableConcept>;
    code?: CodeableConcept;
    subject: Reference;
    focus?: Reference;
    encounter?: Reference;
    /**
     * Estimated or actual date, date-time, period, or age when the procedure did occur or is occurring.  Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.
     */
    occurrenceDateTime?: string;
    occurrencePeriod?: Period;
    /**
     * Estimated or actual date, date-time, period, or age when the procedure did occur or is occurring.  Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.
     */
    occurrenceString?: string;
    occurrenceAge?: Age;
    occurrenceRange?: Range;
    occurrenceTiming?: Timing;
    recorded?: Date;
    recorder?: Reference;
    /**
     * Indicates if this record was captured as a secondary 'reported' record rather than as an original primary source-of-truth record.  It may also indicate the source of the report.
     */
    reportedBoolean?: boolean;
    reportedReference?: Reference;
    /**
     * Indicates who or what performed the procedure and how they were involved.
     */
    performer?: Array<ProcedurePerformer>;
    location?: Reference;
    /**
     * The coded reason or reference why the procedure was performed. This may be a coded entity of some type, be present as text, or be a reference to one of several resources that justify the procedure.
     */
    reason?: Array<CodeableReference>;
    /**
     * Detailed and structured anatomical location information. Multiple locations are allowed - e.g. multiple punch biopsies of a lesion.
     */
    bodySite?: Array<CodeableConcept>;
    outcome?: CodeableConcept;
    /**
     * This could be a histology result, pathology report, surgical report, etc.
     */
    report?: Array<Reference>;
    /**
     * Any complications that occurred during the procedure, or in the immediate post-performance period. These are generally tracked separately from the notes, which will typically describe the procedure itself rather than any 'post procedure' issues.
     */
    complication?: Array<CodeableReference>;
    /**
     * If the procedure required specific follow up - e.g. removal of sutures. The follow up may be represented as a simple note or could potentially be more complex, in which case the CarePlan resource can be used.
     */
    followUp?: Array<CodeableConcept>;
    /**
     * Any other notes and comments about the procedure.
     */
    note?: Array<Annotation>;
    /**
     * A device that is implanted, removed or otherwise manipulated (calibration, battery replacement, fitting a prosthesis, attaching a wound-vac, etc.) as a focal portion of the Procedure.
     */
    focalDevice?: Array<ProcedureFocalDevice>;
    /**
     * Identifies medications, devices and any other substance used as part of the procedure.
     */
    used?: Array<CodeableReference>;
    /**
     * Other resources from the patient record that may be relevant to the procedure.  The information from these resources was either used to create the instance or is provided to help with its interpretation. This extension should not be used if more specific inline elements or extensions are available.
     */
    supportingInfo?: Array<Reference>;
}