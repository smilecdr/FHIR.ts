/**
 * FHIR Version R5
 * The following is auto generated resource definition.
 *
 * OpenAPI spec version: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { CodeableConcept } from './codeableConcept';
import { CoverageEligibilityRequestDiagnosis } from './coverageEligibilityRequestDiagnosis';
import { Extension } from './extension';
import { Money } from './money';
import { PositiveInt } from './positiveInt';
import { Quantity } from './quantity';
import { Reference } from './reference';

/**
 * The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.
 */
export interface CoverageEligibilityRequestItem { 
    id?: string;
    /**
     * May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
     */
    extension?: Array<Extension>;
    /**
     * May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
     */
    modifierExtension?: Array<Extension>;
    /**
     * Exceptions, special conditions and supporting information applicable for this service or product line.
     */
    supportingInfoSequence?: Array<PositiveInt>;
    category?: CodeableConcept;
    productOrService?: CodeableConcept;
    /**
     * Item typification or modifiers codes to convey additional context for the product or service.
     */
    modifier?: Array<CodeableConcept>;
    provider?: Reference;
    quantity?: Quantity;
    unitPrice?: Money;
    facility?: Reference;
    /**
     * Patient diagnosis for which care is sought.
     */
    diagnosis?: Array<CoverageEligibilityRequestDiagnosis>;
    /**
     * The plan/proposal/order describing the proposed service in detail.
     */
    detail?: Array<Reference>;
}